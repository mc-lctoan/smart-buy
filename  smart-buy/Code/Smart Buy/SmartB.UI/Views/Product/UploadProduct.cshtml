@{
    ViewBag.Title = "UploadProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model SmartB.UI.Models.ListSellProductModel
<script src="~/Scripts/jquery-1.8.2.min.js"" type="text/javascript"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<!-- Script Paggin -->
<script>
    
    $(document).ready(function () {
        $('table.table').each(function () {
            var currentPage = 0;
            var numPerPage = 10;
            var $table = $(this);
            $table.bind('repaginate', function () {
                $table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
            });
            $table.trigger('repaginate');
            var numRows = $table.find('tbody tr').length;
            var numPages = Math.ceil(numRows / numPerPage);
            var $pager = $('<div class="pager" style="text-align:left"></div>');
            for (var page = 0; page < numPages; page++) {
                $('<span class="page-number "></span>').text(page + 1).bind('click', {
                    newPage: page
                }, function (event) {
                    currentPage = event.data['newPage'];
                    $table.trigger('repaginate');
                    $(this).addClass('active').siblings().removeClass('active');
                }).appendTo($pager).addClass('clickable');
            }
            $pager.insertAfter($table).find('span.page-number:first').addClass('active');
        });
    });

</script>
<!--Css cho Pagging -->
<style>
    .pager {
        margin: 0 0;
    }

    div.pager span {
        display: inline-block;
        padding: 2px 9px;
        font-size: 11.844px;
        font-weight: bold;
        line-height: 14px;
        color: #ffffff;
        text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
        white-space: nowrap;
        vertical-align: baseline;
        background-color: #3a87ad; /*padding-right: 9px;
  padding-left: 9px;*/
        -webkit-border-radius: 9px;
        -moz-border-radius: 9px;
        border-radius: 9px;
    }

        div.pager span.active {
            background-color: #c00;
        }
</style>
<h2 style="font-size: x-large" class="strong">Upload Product</h2>

<form action="/Product/UploadProduct" enctype="multipart/form-data" method="post">
    <input type="file" id="excelFile" name="excelFile" />
    <input type="submit" value="Upload!" />
</form>

@using (Html.BeginForm("SaveProducts", "Product"))
{
    if (@ViewBag.countInsert != null || @ViewBag.countUpdate != null)
    {
        if (@ViewBag.countInsert.ToString() != "Có 0 sản phẩm được lưu mới." & @ViewBag.countUpdate.ToString() != "Có 0 sản phẩm được cập nhật giá.")
        {
          <label style="color: blue;font-weight:bold;font-size:larger">@ViewBag.countUpdate </label>
          <label style="color: blue;font-weight:bold;font-size:larger">@ViewBag.countInsert</label>
        }
        else if (@ViewBag.countInsert.ToString() == "Có 0 sản phẩm được lưu mới." & @ViewBag.countUpdate.ToString() != "Có 0 sản phẩm được cập nhật giá.")
        { 
        <label style="color: blue;font-weight:bold;font-size:larger">@ViewBag.countUpdate </label>
        }
        else if (@ViewBag.countInsert.ToString() != "Có 0 sản phẩm được lưu mới." & @ViewBag.countUpdate.ToString() == "Có 0 sản phẩm được cập nhật giá.")
        {
        <label style="color: blue;font-weight:bold;font-size:larger">@ViewBag.countInsert</label>
        }
    }
    if (@ViewBag.errorCount >= 5)
    {
         <label style="color: red;font-weight:bold;font-size:larger"> <text>File có quá nhiều lỗi.</text><br />
            <text>Vui lòng chỉnh sửa lại đúng thông tin.</text>
        </label>
    }
    if (@ViewBag.ExceptionName == "External table is not in the expected format.")
    {
        <label style="color: red;font-weight:bold;font-size:larger"> <text>File không đúng định dạng.</text><br />
            <text>Vui lòng chọn định dạng file Excel.</text>
        </label>
    }
    if (@ViewBag.ExceptionName == "Tên sản phẩm phải từ 5 đến 100 ký tự")
    {
    <label style="color: red"> @ViewBag.ExceptionName</label>
    }
    if (@ViewBag.ExceptionMarket == "Tên chợ phải từ 5 đến 20 ký tự")
    {
    <label style="color: red"> @ViewBag.ExceptionMarket</label>
    }
    if (@ViewBag.ExceptionPrice == "Giá phải từ 1 đến 10000")
    {
    <label style="color: red"> @ViewBag.ExceptionPrice</label>
    }
    if (Model != null && @ViewBag.errorCount < 5 )
    {
        if (@ViewBag.errorCount > 0)
        {
     
 <table class="table">
        <lable style="font-size: x-large; font-weight: bold;color:blue">Danh sách sản phẩm bị lỗi</lable>
        <tr style="font-size: 14px;line-height: 14pt;padding: 8px;border-bottom: 1px #eaeaea solid; font-weight: bold">
            <td style="padding: 8px;width:55px;">STT</td>
            <td style="padding: 8px;width:187px;">Tên Sản Phẩm</td>
            <td style="padding: 8px;width:202px;">Tên Chợ</td>
            <td style="padding: 8px;width:176px;">Giá (Ngàn đồng)</td>
        </tr>

        @for (int i = 0; i < Model.InCorrectSellProducts.Count; i++)
        {
            <tr >
                @Html.HiddenFor(model => model.InCorrectSellProducts[i].Id)
                <td style="padding: 8px;width:55px;">@(i + 1)</td>
               @if (@Model.InCorrectSellProducts[i].Name.Length < 5 || @Model.InCorrectSellProducts[i].Name.Length > 100)
               {
                    <td style="color: red; width:187px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Name, new { style = "color: red;font-weight:bold; width: 155px" })</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Name)</p></span>
               }
               else
               {
                   <td style="width:187px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Name)</td>
                   <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Name)</p></span>
               }
                @if (@Model.InCorrectSellProducts[i].MarketName.Length < 5 || @Model.InCorrectSellProducts[i].MarketName.Length > 20)
                {
                    <td style="color: red;width:202px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].MarketName, new { style = "color: red;font-weight:bold; width: 155px" })</td>       
                    <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].MarketName)</p></span>
                }
                else
                {
                    <td style="width:202px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].MarketName)</td> 
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].MarketName)</p></span>
                                       
                }
                @if (@Model.InCorrectSellProducts[i].Price < 1 || @Model.InCorrectSellProducts[i].Price > 10000)
                {
                    <td style="color: red;width:176px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Price, new { style = "color: red;font-weight:bold; width: 155px" })</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Price)</p></span>
                }
                else
                {
                    <td style="width:176px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Price)</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Price)</p></span>
                }
                
            </tr>
        }
    </table>
}
        
 <table class="table">
        <lable style="font-size: x-large; font-weight: bold;color:blue">Danh sách sản phẩm</lable>
        <tr style="font-size: 14px;line-height: 14pt;padding: 8px;border-bottom: 1px #eaeaea solid; font-weight: bold">
            <td style="padding: 8px;width:55px;">STT</td>
            <td style="padding: 8px;width:187px;">Tên Sản Phẩm</td>
            <td style="padding: 8px;width:202px;">Tên Chợ</td>
            <td style="padding: 8px;width:176px;">Giá (Ngàn đồng)</td>
        </tr>

        @for (int i = 0; i < Model.CorrectSellProducts.Count; i++)
        {
            <tr >
                @Html.HiddenFor(model => model.CorrectSellProducts[i].Id)
                <td style="padding: 8px;width:55px;">@(i + 1)</td>
               @if (@Model.CorrectSellProducts[i].Name.Length < 5 || @Model.CorrectSellProducts[i].Name.Length > 100)
               {
                    <td style="color: red; width:187px">@Html.TextBoxFor(model => model.CorrectSellProducts[i].Name, new { style = "color: red;font-weight:bold; width: 155px" })</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.CorrectSellProducts[i].Name)</p></span>
               }
               else
               {
                   <td style="width:187px">@Html.TextBoxFor(model => model.CorrectSellProducts[i].Name)</td>
                   <span><p style="color:Red">@Html.ValidationMessageFor(model => model.CorrectSellProducts[i].Name)</p></span>
               }
                @if (@Model.CorrectSellProducts[i].MarketName.Length < 5 || @Model.CorrectSellProducts[i].MarketName.Length > 20)
                {
                    <td style="color: red;width:202px">@Html.TextBoxFor(model => model.CorrectSellProducts[i].MarketName, new { style = "color: red;font-weight:bold; width: 155px" })</td>       
                    <span><p style="color:Red">@Html.ValidationMessageFor(model => model.CorrectSellProducts[i].MarketName)</p></span>
                }
                else
                {
                    <td style="width:202px">@Html.TextBoxFor(model => model.CorrectSellProducts[i].MarketName)</td> 
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.CorrectSellProducts[i].MarketName)</p></span>
                                       
                }
                @if (@Model.CorrectSellProducts[i].Price < 1 || @Model.CorrectSellProducts[i].Price > 10000)
                {
                    <td style="color: red;width:176px">@Html.TextBoxFor(model => model.CorrectSellProducts[i].Price, new { style = "color: red;font-weight:bold; width: 155px" })</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.CorrectSellProducts[i].Price)</p></span>
                }
                else
                {
                    <td style="width:176px">@Html.TextBoxFor(model => model.CorrectSellProducts[i].Price)</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.CorrectSellProducts[i].Price)</p></span>
                }
                
            </tr>
        }
    </table> 
    <br />
        if (@ViewBag.ExceptionName != "External table is not in the expected format.")
        {
    
    <input class="primary" type="submit" name="Lưu lại" value="Lưu lại" />
    <input class="bg-gray fg-white" value="Hủy" type="button" onclick='window.location = "/Product/UploadProduct"' />
   
        }
    }
    else if (Model != null && @ViewBag.errorCount >= 5)
    {
         <table class="table">
        <lable style="font-size: x-large; font-weight: bold;color:blue">Danh sách sản phẩm bị lỗi</lable>
        <tr style="font-size: 14px;line-height: 14pt;padding: 8px;border-bottom: 1px #eaeaea solid; font-weight: bold">
            <td style="padding: 8px;width:55px;">Số dòng</td>
            <td style="padding: 8px;width:187px;">Tên Sản Phẩm</td>
            <td style="padding: 8px;width:202px;">Tên Chợ</td>
            <td style="padding: 8px;width:176px;">Giá (Ngàn đồng)</td>
        </tr>

        @for (int i = 0; i < Model.InCorrectSellProducts.Count; i++)
        {
            <tr >
                @Html.HiddenFor(model => model.InCorrectSellProducts[i].Id)
                <td style="padding: 8px;width:100px;">@Model.InCorrectSellProducts[i].RowNumber</td>
               @if (@Model.InCorrectSellProducts[i].Name.Length < 5 || @Model.InCorrectSellProducts[i].Name.Length > 100)
               {
                    <td style="color: red; width:187px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Name, new { style = "color: red;font-weight:bold; width: 155px",@readonly = "readonly" })</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Name)</p></span>
               }
               else
               {
                   <td style="width:187px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Name, new { disabled="disabled", @readonly = "readonly" })</td>
                   <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Name)</p></span>
               }
                @if (@Model.InCorrectSellProducts[i].MarketName.Length < 5 || @Model.InCorrectSellProducts[i].MarketName.Length > 20)
                {
                    <td style="color: red;width:202px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].MarketName, new { style = "color: red;font-weight:bold; width: 155px" ,@readonly = "readonly" })</td>       
                    <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].MarketName)</p></span>
                }
                else
                {
                    <td style="width:202px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].MarketName, new { disabled="disabled", @readonly = "readonly" })</td> 
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].MarketName)</p></span>
                                       
                }
                @if (@Model.InCorrectSellProducts[i].Price < 1 || @Model.InCorrectSellProducts[i].Price > 10000)
                {
                    <td style="color: red;width:176px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Price, new { style = "color: red;font-weight:bold; width: 155px", @readonly = "readonly" })</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Price)</p></span>
                }
                else
                {
                    <td style="width:176px">@Html.TextBoxFor(model => model.InCorrectSellProducts[i].Price, new { disabled="disabled", @readonly = "readonly" })</td>
                     <span><p style="color:Red">@Html.ValidationMessageFor(model => model.InCorrectSellProducts[i].Price)</p></span>
                }
                
            </tr>
        }
    </table>
    }
}

