@{
    ViewBag.Title = "Xử lý sản phẩm trùng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutNew.cshtml";
}

@section headScript
{
    <script type="text/javascript" src="@Url.Content("~/Scripts/utils/productUtils.js")"></script>

    <!-- Metro -->
    <link rel="stylesheet" href="@Url.Content("~/Template/Metro/css/metro-bootstrap.css")" />
    <script src="@Url.Content("~/Template/Metro/js/jquery/jquery.widget.min.js")"></script>
    <script src="@Url.Content("~/Template/Metro/js/metro/metro.min.js")"></script>
}

@section sidebar
{
    <aside id="sidebar">
        <nav id="navigation" class="collapse">
            <ul>
                <li>
                    <span title="General">
                        <i class="icon-home"></i>
                        <span class="nav-title">Hệ thống</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("ConfigureSystem", "System")">
                                <i class="icol-cog"></i>
                                Cấu hình hệ thống
                            </a>
                        </li>
                    </ul>
                </li>
                <li class="active">
                    <span title="Data">
                        <i class="icon-table"></i>
                        <span class="nav-title">Dữ liệu</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("UploadProduct", "Import")">
                                <i class="icol-doc-excel-table"></i>Nhập từ Excel
                            </a>
                        </li>
                        <li class="active">
                            <a href="@Url.Action("TrainingMatch", "Training")">
                                <i class="icol-application-double"></i>Xử lý dữ liệu trùng
                            </a>
                        </li>
                        <li><a href="@Url.Action("ManageUserPrice", "UserPrice")"><i class="icol-application-double"></i>Quản lý giá đề xuất</a></li>
                    </ul>
                </li>
                <li>
                    <span title="Product">
                        <i class="icon-gift"></i>
                        <span class="nav-title">Quản lý sản phẩm</span>
                    </span>
                    <ul class="inner-nav">
                        <li class="active">
                            <a href="@Url.Action("Index", "ManageProduct")">
                                <i class="icol-application-view-columns"></i>
                                Danh sách sản phẩm
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Create", "ManageProduct")">
                                <i class="icol-application-add"></i>
                                Tạo sản phẩm mới
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <span title="Market">
                        <i class="icon-bag"></i>
                        <span class="nav-title">Quản lý chợ</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("Index", "Market")">
                                <i class="icol-application-view-columns"></i>
                                Danh sách các chợ
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Create", "Market")">
                                <i class="icol-application-add"></i>
                                Tạo chợ mới
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <span title="Parser">
                        <i class="icon-download-2"></i>
                        <span class="nav-title">Parser</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("Index", "Parser")">
                                <i class="icol-application-view-columns"></i>
                                Danh sách các parser
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("CreateParser", "Parser")">
                                <i class="icol-application-add"></i>
                                Tạo parser
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Index", "LogFile")">
                                <i class="icol-page-white-text"></i>
                                Quản lý log file
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
        </nav>
    </aside>
}

@section mainHeader
{
    <div id="main-header" class="page-header">
        <ul class="breadcrumb">
            <li>
                <i class="icon-home"></i>
                Dữ liệu
                <span class="divider">&raquo;</span>
            </li>
            <li>
                <a href="@Url.Action("TrainingMatch", "Training")">Xử lý sản phẩm trùng</a>
            </li>
        </ul>

        <h1 id="main-heading">Xử lý sản phẩm trùng
            <span>Dạy cho máy việc phân biệt các sản phẩm có khả năng trùng nhau</span>
        </h1>
    </div>
}


@section footScript
{
    <!-- File Input -->
    <link rel="stylesheet" href="@Url.Content("~/Areas/Admin/MoonCake/bootstrap/css/bootstrap.min.css")" media="screen" />
}

<script>
    function mergeProduct(i, productId) {

        var duplicateTable = $("#table_" + i);
        var listTr = duplicateTable.find("tr");
        var trFor = document.getElementsByClassName('trFor_' + i);
        var dictionaries = [];
        for (var j = 0; j < listTr.length; j++) {
            if (listTr[j].id != 'header_' + i) {
                var cells = listTr[j].cells;
                for (var l = 0; l < 2; l++) {
                    var checkbox = cells[0].childNodes[l].checked;
                    if (checkbox == true || checkbox == false) {
                        break;
                    }
                }

                var name = cells[1].innerHTML;

                if (checkbox == true) {
                    var dictionary = new Dictionary(productId, name);
                    dictionaries.push(dictionary);
                }
            }
        }
        if (dictionaries.length < 2) {
            alert("Vui lòng chọn ít nhất 2 sản phẩm.");
        } else {
            var productName = "";
            for (var k = 0; k < dictionaries.length; k++) {
                if (k != dictionaries.length) {
                    productName += dictionaries[k].Name + ";"

                } else {
                    productName += dictionaries[k].Name;
                }

            }



            var productJson = JSON.stringify(dictionaries);
            $.ajax({
                type: 'GET',
                url: 'MergeProductTraining',
                data: { 'productJson': productJson, 'productName': productName },
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    //if (data == true) {
                    //var length = trFor.length;
                    //var checked = new Array();
                    //var count = 0;
                    for (var j = 0; j < trFor.length; j++) {
                        var cell = trFor[j].cells;
                        //var checkbox = cell[0].checkbox.checked;
                        for (var l = 0; l < 2; l++) {
                            var checkbox = cell[0].childNodes[l].checked;
                            if (checkbox == true || checkbox == false) {
                                break;
                            }
                        }
                        if (checkbox == true) {
                            document.getElementById("table_" + i).deleteRow(j + 1);
                            j = -1;
                        }
                    }

                    //for (var k = 0; k < checked.length; k++) {
                    //}

                    if (trFor.length == 1) {
                        $("#dupTable_" + i).find("tr").find("input:checkbox");
                        $("#split_" + i).click();
                    }
                    window.parent.location.href = window.parent.location.href;
                        //var mes = "Gộp thành công";
                        //showNotifyDialog(mes);
                    //}
                    //else {
                        
                        //showNotifyDialog("(*) Có lỗi xảy ra. Vui lòng thử lại.");
                        //var mesDialog = document.getElementById('mesDialog');
                        //mesDialog.style.color = 'red';
                    //}
                },
                error: function (e) {
                    showNotifyDialog("(*) Có lỗi xảy ra. Vui lòng thử lại. " + e.message);
                    var mesDialog = document.getElementById('mesDialog');
                    mesDialog.style.color = 'red';
                }
            });
        }

    }

    function split(i) {
        var duplicateTable = $("#table_" + i);
        var listTr = duplicateTable.find("tr");
        var trFor = document.getElementsByClassName('trFor_' + i);
        var products = [];

        for (var j = 0; j < listTr.length; ++j) {
            if (listTr[j].id != 'header_' + i) {
                var cells = listTr[j].cells;
                for (var l = 0; l < 2; l++) {
                    var checkbox = cells[0].childNodes[l].checked;
                    if (checkbox == true || checkbox == false) {
                        break;
                    }
                }
                var name = cells[1].innerHTML;

                if (trFor.length < 2) {
                    var product = new Product(name);
                    products.push(product);
                }
                if (listTr.length < 4) {
                    var product = new Product(name);
                    products.push(product);
                }
                else
                    if (checkbox == true) {
                        var product = new Product(name);
                        products.push(product);
                    }
            }
        }
        if (products.length < 1) {
            alert("Vui lòng chọn ít nhất 1 sản phẩm để tách.")
        }
        else {
            var productJson = JSON.stringify(products);
            var productName = "";
            for (var k = 0; k < products.length; k++) {
                if (k != products.length) {
                    productName += products[k].Name + ";"

                } else {
                    productName += products[k].Name;
                }

            }

            $.ajax({
                type: 'GET',
                url: 'SplitProductTraining',
                data: { 'productJson': productJson, 'productName': productName },
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    //if (data == true) {
                    //    var mes = "Tách thành công";
                    //    showNotifyDialog(mes);
                    //}
                    //else {
                    window.parent.location.href = window.parent.location.href;
                    //    showNotifyDialog("(*) Có lỗi xảy ra. Vui lòng thử lại.");
                    //    var mesDialog = document.getElementById('mesDialog');
                    //    mesDialog.style.color = 'red';
                    //}
                }
            });
        }
    }


    function Dictionary(productId, Name) {
        this.productId = productId;
        this.Name = Name;
    }

    function Product(Name) {
        this.Name = Name;
    }

</script>

 @if (TempData["MergeProduct"] != null)
        {
            string message = TempData["MergeProduct"].ToString();
            if (message == "Success")
            {
            <div class="alert alert-success fade in">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>Thành công</strong><br />
                Gộp thành công
            </div>
            }
            else if (message == "Failed")
            {
            <div class="alert alert-danger fade in">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>Thất bại</strong><br />
                Gộp thất bại. Vui lòng thử lại sau.
            </div>
            }
        }

        @if (TempData["SplitProduct"] != null)
        {
            string messageSplit = TempData["SplitProduct"].ToString();
            if (messageSplit == "Success")
            {
            <div class="alert alert-success fade in">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>Thành công</strong><br />
                Tách thành công
            </div>
            }
            else if (messageSplit == "Failed")
            {
            <div class="alert alert-danger fade in">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>Thất bại</strong><br />
                Tách thất bại. Vui lòng thử lại sau.
            </div>
            }
        }

@if (ViewBag.dupDictionary != null)
{
    for (int i = 0; i < ViewBag.dupDictionary.Count; i++)
    {
        int productId = 0;
    <div id="dupTable_@i">
        <div class="row-fluid">
            <div class="span8 widget">
                <div class="widget-header">
                    <span class="title">Nhóm sản phẩm trùng</span>
                    <div class="toolbar">
                        <div class="btn-group">
                            <button class="btn" id="combine_@i" onclick="mergeProduct('@i')">
                                <i class="icol-arrow-join"></i>
                                Gộp
                            </button>
                            <button class="btn" id="split_@i" onclick="split('@i')">
                                <i class="icol-arrow-divide"></i>
                                Tách
                            </button>
                        </div>
                    </div>
                </div>
                <div class="widget-content table-container">
                    <table id="table_@i" class="table table-striped table-bordered">
                        <thead>
                            <tr id="header_@i">
                                <th></th>
                                <th>Tên Sản Phẩm</th>
                            </tr>
                        </thead>

                        @for (int j = 0; j < ViewBag.dupDictionary[i].Count; j++)
                        {
                            productId = ViewBag.dupDictionary[i][j].ProductId;
                            <tr class="trFor_@i">
                                @if (j == 0)
                                {
                                    <td>
                                        <input type="checkbox" checked /></td>
                                    <td>@ViewBag.dupDictionary[i][j].Name</td>                                  
                            
                                }
                                else
                                {
                                    <td>
                                        <input type="checkbox" /></td>
                                    <td>@ViewBag.dupDictionary[i][j].Name</td>                                    
                            
                                }
                            </tr>  
                        }

                        @*@for (int j = 0; j < @ViewBag.dupProduct[i].Count; j++)
                        {
                
                            <tr>
                                <td>
                                    <input type="checkbox" /></td>
                                <td>@ViewBag.dupProduct[i][j].Name</td>
                            </tr>
                        }*@
                    </table>
                </div>
            </div>
        </div>
    </div>
    }
}

