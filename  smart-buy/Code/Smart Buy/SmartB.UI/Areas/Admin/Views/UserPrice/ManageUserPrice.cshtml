@model PagedList.IPagedList<SmartB.UI.Models.EntityFramework.UserPrice>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Quản lý giá đề xuất";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutNew.cshtml";
}

@section headScript
{
    <link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" type="text/css" />
}

@section sidebar
{
    <aside id="sidebar">
        <nav id="navigation" class="collapse">
            <ul>
                <li>
                    <span title="General">
                        <i class="icon-home"></i>
                        <span class="nav-title">Trang chủ</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("Statistics", "System")">
                                <i class="icol-chart-curve"></i>
                                Thông tin hệ thống
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                <i class="icol-cog"></i>
                                Cấu hình hệ thống
                            </a>
                        </li>
                    </ul>
                </li>
                <li class="active">
                    <span title="Data">
                        <i class="icon-table"></i>
                        <span class="nav-title">Dữ liệu</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("UploadProduct", "Import")">
                                <i class="icol-doc-excel-table"></i>Nhập từ Excel
                            </a>
                        </li>
                        <li><a href="@Url.Action("TrainingMatch", "Training")"><i class="icol-application-double"></i>Xử lý dữ liệu trùng</a></li>
                        <li class="active"><a href="@Url.Action("ManageUserPrice", "UserPrice")"><i class="icol-application-double"></i>Quản lý giá đề xuất</a></li>
                    </ul>
                </li>
                <li>
                    <span title="Product">
                        <i class="icon-gift"></i>
                        <span class="nav-title">Quản lý sản phẩm</span>
                    </span>
                    <ul class="inner-nav">
                        <li class="active">
                            <a href="@Url.Action("Index", "ManageProduct")">
                                <i class="icol-application-view-columns"></i>
                                Danh sách sản phẩm
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Create", "ManageProduct")">
                                <i class="icol-application-add"></i>
                                Tạo sản phẩm mới
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <span title="Market">
                        <i class="icon-bag"></i>
                        <span class="nav-title">Quản lý chợ</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("Index", "Market")">
                                <i class="icol-application-view-columns"></i>
                                Danh sách các chợ
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Create", "Market")">
                                <i class="icol-application-add"></i>
                                Tạo chợ mới
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <span title="Parser">
                        <i class="icon-download-2"></i>
                        <span class="nav-title">Parser</span>
                    </span>
                    <ul class="inner-nav">
                        <li>
                            <a href="@Url.Action("Index", "Parser")">
                                <i class="icol-application-view-columns"></i>
                                Danh sách các parser
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("CreateParser", "Parser")">
                                <i class="icol-application-add"></i>
                                Tạo parser
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("Index", "LogFile")">
                                <i class="icol-page-white-text"></i>
                                Quản lý log file
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
        </nav>
    </aside>
}


<script>
    function updateUserPrice(id, productId, price, lastUpdatedTime) {
        $.ajax({
            type: 'GET',
            url: '../UserPrice/UpdateUserPrice',
            data: { 'id': id, 'productId': productId, 'price': price, 'lastUpdatedTime': lastUpdatedTime },
            contentType: "application/json",
            dataType: 'json',

            success: function (data) {

                //if (data == true) {
                //    message = "Cập nhật thành công.";
                //    //showNotifyDialog(message);
                //} else {
                //    message = "(*) Có lỗi xảy ra. Vui lòng thử lại.";
                //    //showNotifyDialog(message);
                //}
                window.parent.location.href = window.parent.location.href;
            },
            error: function (e) {
                //$.Dialog.close();
                alert("(*) Có lỗi xảy ra. Vui lòng thử lại ");
                // message = "(*) Có lỗi xảy ra. Vui lòng thử lại " + e.message;
                //showNotifyDialog(message);
            }
        });
    }
</script>

@{
    DateTime today = DateTime.Today.Date;
    string todayFormat = String.Format("{0:dd/MM/yyyy}", today);
}

@section mainHeader
{
    <div id="main-header" class="page-header">
        <ul class="breadcrumb">
            <li>
                <i class="icon-home"></i>
                Dữ liệu
                <span class="divider">&raquo;</span>
            </li>
            <li>
                <a href="@Url.Action("ManageUserPrice", "UserPrice")">Quản lý giá đề xuất</a>
            </li>
        </ul>

        <h1 id="main-heading">Giá sản phẩm người dùng đề xuất 
            @*trong ngày @todayFormat*@
        </h1>
    </div>
}


<div class="row-fluid">
    <div class="span12 widget">
        @if (TempData["UpdateUserPrice"] != null)
        {
            string message = TempData["UpdateUserPrice"].ToString();
            if (message == "Success")
            {
            <div class="alert alert-success fade in">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>Thành công</strong><br />
                Cập nhật thành công
            </div>
            }
            else if (message == "Failed")
            {
            <div class="alert alert-danger fade in">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>Thất bại</strong><br />
                Cập nhật thất bại. Vui lòng thử lại sau.
            </div>
            }
        }

        @if (TempData["deleteUserPrice"] != null)
        {
            <div class="alert alert-success fade in">
                <a href="#" class="close" data-dismiss="alert">&times;</a>
                <strong>Thành công</strong><br />
                Xóa thành công
            </div>
        }
        @using (Html.BeginForm("Delete", "UserPrice"))
        {
            <div class="widget-header">
                <span class="title">Danh sách giá sản phẩm người dùng đề xuất </span>
                <span>*Đơn vị tính : Nghìn đồng.</span>
                <div class="toolbar">
                    <div class="btn-group">
                        <button class="btn" type="submit">
                            <i class="icol-cancel"></i>
                            Xóa
                        </button>
                    </div>
                </div>
            </div>

            <div class="widget-content table-container">
                <table class="table table-bordered table-striped table-checkable">
                    <thead>
                        <tr>
                            <th>Tên sản phẩm</th>
                            <th>Giá hiện tại</th>
                            <th>Giá đề xuất</th>
                            <th>Địa điểm</th>
                            <th>Người đề xuất</th>
                            <th>Thời điểm đề xuất</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model)
                        {
                            var userPriceId = item.Id;
                            var updatedTime = item.LastUpdatedTime;
                            string updatedTimeFormat = String.Format("{0:HH:mm:ss}", updatedTime);
                            SmartB.UI.Models.EntityFramework.SmartBuyEntities db = new SmartB.UI.Models.EntityFramework.SmartBuyEntities();
                            var productId = item.Product.Id;
                            SmartB.UI.Models.EntityFramework.ProductAttribute proAtt = (from p in db.ProductAttributes
                                                                                        where p.ProductId == productId
                                                                                        group p by p.ProductId into grp
                                                                                        select grp.OrderByDescending(o => o.LastUpdatedTime).FirstOrDefault()).FirstOrDefault();
            
                            <tr>
                                <td>
                                    @item.Product.Name
                                </td>
                                <td>
                                    @proAtt.MinPrice - @proAtt.MaxPrice
                                </td>
                                <td>
                                    @item.UpdatedPrice
                                </td>
                                <td>
                                    @item.Market.Name
                                </td>
                                <td>
                                    @item.Username
                                </td>
                                <td>
                                    @updatedTimeFormat
                                </td>
                                <td>
                                    <button class="btn btn-primary" id="btnSaveUserPrice" onclick="updateUserPrice('@item.Id','@productId','@item.UpdatedPrice', '@updatedTime')">
                                        Lưu lại
                                    </button>
                                </td>
                                <td class="checkbox-column">
                                    <input type="checkbox" value="@item.Id" name="userIds"/></td>
                            </tr>
                        }

                    </tbody>
                </table>

                <div class="toolbar">
                    <div class="pagination-right">
                        @Html.PagedListPager(Model, page => Url.Action("ManageUserPrice", new { page }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
                    </div>
                </div>
            </div>
        }
    </div>
</div>
